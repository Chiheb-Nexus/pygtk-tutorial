<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="window">
    <title>Window</title>
    <para>In all but trivial or specialised applications, a window will be the base of your application.</para>
    <simplesect>
        <title>Constructor</title>
        <programlisting>window = gtk.Window()</programlisting>
    </simplesect>
    <simplesect>
        <title>Methods</title>
        <para>Widgets can be added and removed from the window with the following calls:</para>
        <programlisting>window.add(child)
window.remove(child)</programlisting>
        <para>A title can be added to the window with:</para>
        <programlisting>window.set_title(text)</programlisting>
        <para>We can also specify a size. By default, the window created will be 200 x 200 pixels.</para>
        <programlisting>window.set_default_size(width, height)</programlisting>
        <para>In some cases, you may only wish to specify one paramater. In these cases, you can specify the value required and -1 for the value which is not required. Using -1 means the window will be dynamically sized to whatever the content is.</para>
        <para>The window can also be maximized and unmaximized with the following:</para>
        <programlisting>window.maximize()
window.unmaximize()</programlisting>
        <para>When specifying .maximize(), any default window sizes that have been set will be overridden. When using .unmaximize(), the window will shrink to the size of the child content or to any size specified.</para>
        <para>Many applications also have the ability to go fullscreen. If using fullscreen, we need the ability to come out of the fullscreen mode with the following methods:</para>
        <programlisting>window.fullscreen()
window.unfullscreen()</programlisting>
        <para>Certain requirements may mean that we need to prevent the application window from being resized. This can be done with the method:</para>
        <programlisting>window.set_resizable(resizable)</programlisting>
        <para>When the resizable value is set to False, the window will change in two ways. First, there will be no maximize button on the title bar. Secondly, the user will not be able to adjust the window size using the corners of the window.</para>
        <para>It is useful to set an icon for your application to make it easily identifiable. This can be set from a file with:</para>
        <programlisting>window.set_icon_from_file(icon_file)</programlisting>
        <para>The icon_file parameter should be the filepath of the image. The image format with commonly be PNG, SVG, JPG, GIF, XPM or BMP, however many others are supported.</para>
        <para>To set the focus of the application to a particular widget, use:</para>
        <programlisting>window.set_focus(child)</programlisting>
    </simplesect>
    <simplesect>
        <title>Signals</title>
        <para>Listed here is a subset of Window signals that are commonly used.</para>
        <programlisting>"destroy"
"delete-event"
"event"
"add"
"remove"</programlisting>
        <para>The "destroy" signal is emitted when the user requests that the window object should be destroyed. This is often emitted from the X button on the titlebar of the window. The "delete-event" signal emits when the window is requested to be deleted. An "event" signal can be used to notify of any event that occurs within a window. The "add" and "remove" signals are emitted when child widgets are added or removed from the window.</para>
    </simplesect>
    <simplesect>
        <title>Example</title>
        <programlisting>#!/usr/bin/env python

import gtk

class Window:
    def __init__(self):
        window = gtk.Window()
        window.set_title("Window Example")
        window.connect("destroy", lambda w: gtk.main_quit())
        window.show()

Window()
gtk.main()</programlisting>
        <para>Download: <ulink url="examples/window.py">window.py</ulink></para>
    </simplesect>
</chapter>
