<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="curve">
    <title>Curve</title>
    <para>A Curve widget allows direct editing of a range of values on a graph-style interface. It is relatively specialised in use for image-editing and video-editing applications.</para>
    <para>Note: Due to the specialised nature of this widget, it may be removed in the future from PyGTK and accessible through another package. Until that time, this widget is available for use as with any other widget and the documentation will remain available.</para>
    <simplesect>
        <title>Constructor</title>
        <programlisting>curve = gtk.Curve()</programlisting>
    </simplesect>
    <simplesect>
        <title>Methods</title>
        <para>We now need to set our range of minimum and maximum values for both the X and Y axis.</para>
        <programlisting>curve.set_range(min_x, max_x, min_y, max_y)</programlisting>
        <para>The minimum and maximum values can either be an integer or float value.</para>
        <para>We can also retrieve the points that have been set on the curve. To retrieve a Python tuple of the points placed, we can use:</para>
        <programlisting>curve.get_vector(points)</programlisting>
        <para>The points argument should either be -1 (to retrieve all points) or an integer greater than zero to return a specified number of points.</para>
    </simplesect>
    <simplesect>
        <title>Example</title>
        <programlisting>#!/usr/bin/env python

import gtk

class Curve:
    def __init__(self):
        window = gtk.Window()
        window.set_default_size(200, 250)
        
        vbox = gtk.VBox(False, 5)
        
        self.curve = gtk.Curve()
        button_retrieve = gtk.Button("Retrieve")
        button_reset = gtk.Button("Reset")
        
        window.connect("destroy", lambda w: gtk.main_quit())
        button_retrieve.connect("clicked", self.points)
        button_reset.connect("clicked", lambda r: self.curve.reset())
        
        window.add(vbox)
        vbox.pack_start(self.curve, True, True, 0)
        vbox.pack_start(button_retrieve, False, False, 0)
        vbox.pack_start(button_reset, False, False, 0)
        
        window.show_all()
    
    def points(self, widget):
        print self.curve.get_vector(5)

Curve()
gtk.main()</programlisting>
        <para>Download <ulink url="examples/curve.py"><command>curve.py</command></ulink></para>
    </simplesect>
</chapter>
