<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="comboboxentry">
    <title>ComboBoxEntry</title>
    <para>A ComboBoxEntry widget is very similar to a standard ComboBox, with the major difference being that text can be entered into it as well as being able to select from a dropdown list. The location to enter text is a simple Entry widget. Therefore it is able to utilise many of the methods available to the Entry.</para>
    <para>Note: a ComboBoxEntry is one of the more complicated widgets in GTK+ as it has several parts which are required to make it work correctly.</para>
	<simplesect>
	    <title>Constructor</title>
	    <programlisting>comboboxentry = gtk.ComboBoxEntry(model, column)</programlisting>
	    <para>The model argument is the name of a ListStore created previously which holds the necessary values. The column argument is the column number which holds the values that are to be displayed in the dropdown. This value is only required if the ListStore contains more than one column.</para>
	</simplesect>
	<simplesect>
	    <title>Methods</title>
	    <para>At some point after the creation of the ComboBox, you may need to change the model used by the widget. This can be useful when getting the ComboBox to display different data.</para>
	    <programlisting>combobox.set_model(model)</programlisting>
	    <para>The column used to populate the dropdown can be changed after construction with:</para>
	    <programlisting>comboboxentry.set_text_column(column)</programlisting>
	    <para>By default, the ComboBox does not have a default item selected. This can be changed using:</para>
	    <programlisting>comboboxentry.set_active(active)</programlisting>
	    <para>The active value is set to the number of the item, with the first item being numbered 0.</para>
	    <para>If the ComboBox has to display a large number of item, it may be better to display them in a grid rather than a list. This can be done using:</para>
	    <programlisting>comboboxentry.set_wrap_width(width)</programlisting>
	    <para>The width value is the number of columns the ComboBox should display. Note that for ComboBox widgets containing more than 50 items and using set_wrap_width, the computation of the grid can slow the application loading speed significantly. In these cases, it is recommended to adjust the design of the application or not using set_wrap_width.</para>
	    <para>To retrieve the selected text from the ComboBox:</para>
	    <programlisting>text = comboboxentry.get_active_text()</programlisting>
	</simplesect>
	<simplesect>
	    <title>Example</title>
	    <programlisting>#!/usr/bin/env python

import gtk

distributions = ["Ubuntu", "Debian", "Sabayon", "Fedora", "Arch", "Mint", "Slackware", "Mandriva", "Sidux", "Mepis"]

class ComboBoxEntry:
    def __init__(self):
        window = gtk.Window()
        
        liststore = gtk.ListStore(str)    
        for item in distributions:
            liststore.append([item])
        
        cell = gtk.CellRendererText()
        
        comboboxentry = gtk.ComboBoxEntry(liststore)
        comboboxentry.pack_start(cell, True)
        comboboxentry.set_active(0)
        
        window.add(comboboxentry)
        
        window.connect("destroy", lambda w: gtk.main_quit())
        comboboxentry.connect("changed", self.changed_item)
        
        window.show_all()

    def changed_item(self, widget):
        print "ComboBox item was changed to %s" % widget.get_active_text()

ComboBoxEntry()
gtk.main()</programlisting>
        <para>Download <ulink url="examples/comboboxentry.py"><command>comboboxentry.py</command></ulink></para>
    </simplesect>
</chapter>
