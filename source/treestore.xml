<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="treestore">
    <title>TreeStore</title>
    <para>The TreeStore widget is similar to a ListStore widget, however it holds data in a heirarchical format. This allows multiple rows of data to be contained within other rows, as opposed to a ListStore which is a flat-format storage. Usage of a TreeStore is similar to a ListStore, however it does add some complexity.</para>
    <simplesect>
        <title>Constructor</title>
        <programlisting>treestore = gtk.TreeStore(datatypes)</programlisting>
        <para>There are a range of datatypes which can be used to hold data. The standard Python ones are:</para>
        <itemizedlist>
            <listitem>str</listitem>
            <listitem>int</listitem>
            <listitem>float</listitem>
            <listitem>long</listitem>
            <listitem>bool</listitem>
            <listitem>object</listitem>
        </itemizedlist>
        <para>Alternatively, the TreeStore can hold PyGTK widgets, such as Buttons, VBox, HBox, etc.</para>
        <para>Also, we can store as GTK+ types:</para>
        <itemizedlist>
            <listitem>gchar</listitem>
            <listitem>guchar</listitem>
            <listitem>gboolean</listitem>
            <listitem>gint</listitem>
            <listitem>guint</listitem>
            <listitem>glong</listitem>
            <listitem>gulong</listitem>
            <listitem>gint64</listitem>
            <listitem>guint64</listitem>
            <listitem>gfloat</listitem>
            <listitem>gdouble</listitem>
            <listitem>gchararray</listitem>
            <listitem>GObject</listitem>
        </itemizedlist>
        <para>We can specify multiple datatypes to allow the TreeStore to hold a wide range of data. These are separated by a comma.</para>
    </simplesect>
    <simplesect>
        <title>Methods</title>
        <para>Items can be added to the TreeStore with the following methods:</para>
        <programlisting>treestore.insert(parent, position, data)
treestore.append(parent, data)
treestore.prepend(parent, data)</programlisting>
        <para>The parent argument should be set to None (if the item being added is the top level item) or should be set to the name of the item. The data argument is the data which is being inserted into the TreeStore. Finally, the .insert method has a position argument, which indicates where in the TreeStore the new item should be placed. Remember that the first item is numbered 0.</para>
        <para>Removal of rows can be achieved with:</para>
        <programlisting>treestore.remove(iter)</programlisting>
        <para>The iter argument is a TreeIter value, used to access the item within the row.</para>
        <para>To remove all the rows of data from the TreeStore, use the call:</para>
        <programlisting>treestore.clear()</programlisting>
    </simplesect>
    <simplesect>
        <title>Example</title>
        <para>The example below uses a variety of widgets such as the <link linkend="treeview">TreeView</link> and <link linkend="cellrenderertext">CellRendererText</link>. These will be covered in later chapters.</para>
        <programlisting>#!/usr/bin/env python

import gtk

class TreeViewTreeStore:
    def __init__(self):
        window = gtk.Window()
        window.set_default_size(200, 200)
        
        treestore = gtk.TreeStore(str)
        treeview = gtk.TreeView(treestore)
        
        ubuntu = treestore.append(None, ["Ubuntu"])
        treestore.append(ubuntu, ["http://www.ubuntu.com/"])
        fedora = treestore.append(None, ["Fedora"])
        treestore.append(fedora, ["http://fedoraproject.org/"])
        treestore.append(None, ["Sabayon"])
        treestore.append(None, ["Arch"])
        debian = treestore.append(None, ["Debian"])
        treestore.append(debian, ["http://www.debian.org/"])
        
        column = gtk.TreeViewColumn("Distributions")
        treeview.append_column(column)
        
        cell = gtk.CellRendererText()
        column.pack_start(cell, False)
        column.add_attribute(cell, "text", 0)
        
        window.connect("destroy", lambda w: gtk.main_quit())
        
        window.add(treeview)
        window.show_all()
        
TreeViewTreeStore()
gtk.main()</programlisting>
        <para>Download <ulink url="examples/treestore.py"><command>treestore.py</command></ulink></para>
    </simplesect>
</chapter>
